(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    320966,       5954]
NotebookOptionsPosition[    317884,       5851]
NotebookOutlinePosition[    318241,       5867]
CellTagsIndexPosition[    318198,       5864]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", "\"\</Users/Apple/Documents\>\"", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.72205721415888*^9, 3.722057254052949*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NDSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Nest", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"#", ",", "x"}], "]"}], "&"}], ",", 
        RowBox[{"a", "[", 
         RowBox[{"x", ",", "t"}], "]"}], ",", "4"}], "]"}], "\[Equal]", 
      RowBox[{"-", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"x", ",", "t"}], "]"}], ",", "t"}], "]"}], ",", "t"}], 
        "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"NestList", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"#", ",", "t"}], "]"}], "&"}], ",", 
        RowBox[{"a", "[", 
         RowBox[{"x", ",", "t"}], "]"}], ",", "1"}], "]"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "2"}]}], "}"}]}], ",", 
     RowBox[{
      RowBox[{"NestList", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"#", ",", "x"}], "]"}], "&"}], ",", 
        RowBox[{"a", "[", 
         RowBox[{"x", ",", "t"}], "]"}], ",", "3"}], "]"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], "}"}], ",", 
   RowBox[{"a", "[", 
    RowBox[{"x", ",", "t"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "t"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.722077619153284*^9, 3.7220776455287247`*^9}, {
  3.722078702978417*^9, 3.722078737444628*^9}, {3.7220787722217903`*^9, 
  3.7220787820035477`*^9}, {3.72207884383801*^9, 3.722078878793482*^9}, {
  3.722078909215166*^9, 3.7220789685234547`*^9}, {3.722079081003417*^9, 
  3.722079096694641*^9}, {3.7220792265417137`*^9, 3.7220792499342318`*^9}, {
  3.722079284417622*^9, 3.7220792851643953`*^9}, {3.722079323399003*^9, 
  3.7220793529489717`*^9}, {3.722079385934106*^9, 3.722079427915897*^9}, {
  3.722079488856248*^9, 3.722079541242639*^9}, {3.722152458904314*^9, 
  3.722152504062643*^9}, {3.722152592845367*^9, 3.722152746193432*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","overdet",
   "\"There are fewer dependent variables, \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"a\\\", \\\"[\\\", RowBox[{\\\"x\\\", \\\",\\\", \
\\\"t\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{SuperscriptBox[\\\"a\\\", \
TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \
\\\")\\\"}], Derivative], Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\
\\\"x\\\", \\\",\\\", \\\"t\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{SuperscriptBox[\\\"a\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"2\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"x\\\", \\\",\\\", \
\\\"t\\\"}], \\\"]\\\"}]}], \\\"}\\\"}]\\), than equations, so the system is \
overdetermined.\"",2,9,6,24142874558114377051,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.722079342859724*^9, 3.722079353794918*^9}, {
   3.722079388021756*^9, 3.722079436323574*^9}, 3.722079493613016*^9, 
   3.72215250494209*^9, 3.722152593416052*^9, {3.722152712437195*^9, 
   3.722152746742442*^9}}],

Cell[BoxData[
 RowBox[{"NDSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["a", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"4", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"x", ",", "t"}], "]"}], "\[Equal]", 
      RowBox[{"-", 
       RowBox[{
        SuperscriptBox["a", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "t"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "[", 
         RowBox[{"x", ",", "t"}], "]"}], ",", 
        RowBox[{
         SuperscriptBox["a", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], "}"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "2"}]}], "}"}]}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "[", 
         RowBox[{"x", ",", "t"}], "]"}], ",", 
        RowBox[{
         SuperscriptBox["a", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"x", ",", "t"}], "]"}], ",", 
        RowBox[{
         SuperscriptBox["a", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"2", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"x", ",", "t"}], "]"}], ",", 
        RowBox[{
         SuperscriptBox["a", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"3", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], "}"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], "}"}], ",", 
   RowBox[{"a", "[", 
    RowBox[{"x", ",", "t"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "t"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.722077637242487*^9, 3.722077645953957*^9}, 
   3.722078782377043*^9, {3.722078856937909*^9, 3.722078879331912*^9}, {
   3.722078939343588*^9, 3.722078969085609*^9}, {3.7220790895717373`*^9, 
   3.722079097596965*^9}, {3.722079243265953*^9, 3.7220792502901363`*^9}, {
   3.722079316049769*^9, 3.722079353821946*^9}, {3.7220793880484867`*^9, 
   3.72207943635325*^9}, 3.722079493640415*^9, 3.722152505075802*^9, 
   3.72215259344322*^9, {3.722152712468889*^9, 3.722152746770505*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "''"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "a"}], "*", 
       RowBox[{"x", "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "''"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "a"}], "*", 
       RowBox[{"y", "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], "\[Equal]", "x0"}], ",", 
     RowBox[{
      RowBox[{"y", "[", "0", "]"}], "\[Equal]", "y0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "w1"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "w2"}]}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], ",", 
     RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.721983861413015*^9, 3.721983972861479*^9}, {
  3.721984012383079*^9, 3.721984012550753*^9}, {3.721984065792062*^9, 
  3.7219840705267363`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{
        SqrtBox["a"], " ", "x0", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SqrtBox["a"], " ", "t"}], "]"}]}], "+", 
       RowBox[{"w1", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          SqrtBox["a"], " ", "t"}], "]"}]}]}], 
      SqrtBox["a"]]}], ",", 
    RowBox[{
     RowBox[{"y", "[", "t", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{
        SqrtBox["a"], " ", "y0", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SqrtBox["a"], " ", "t"}], "]"}]}], "+", 
       RowBox[{"w2", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          SqrtBox["a"], " ", "t"}], "]"}]}]}], 
      SqrtBox["a"]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7219839088542223`*^9, {3.7219839456031103`*^9, 3.721983978510542*^9}, 
   3.72198407088414*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NestList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"#", ",", "x"}], "]"}], "&"}], ",", 
    RowBox[{"a", "[", 
     RowBox[{"x", ",", "t"}], "]"}], ",", "3"}], "]"}], "\[Equal]", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.722152657652438*^9, 3.722152665010612*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.722152641514636*^9, 3.722152665290391*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NestList", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"#", ",", "x"}], "]"}], "&"}], ",", 
     RowBox[{"a", "[", 
      RowBox[{"x", ",", "t"}], "]"}], ",", "3"}], "]"}], "\[Equal]", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "/.", 
  RowBox[{"x", "\[Rule]", "0"}]}]], "Input"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.7220792776775837`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Nest", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"#", ",", "x"}], "]"}], "&"}], ",", 
   RowBox[{"a", "[", 
    RowBox[{"x", ",", "t"}], "]"}], ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.72207874058683*^9, 3.722078766637285*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["a", 
   TagBox[
    RowBox[{"(", 
     RowBox[{"4", ",", "0"}], ")"}],
    Derivative],
   MultilineFunction->None], "[", 
  RowBox[{"x", ",", "t"}], "]"}]], "Output",
 CellChangeTimes->{{3.722078743202908*^9, 3.722078766997263*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"Flatten", "@", 
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", "%63"}], "]"}], ")"}],
       "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", "1"}], ",", 
        RowBox[{"x0", "\[Rule]", "1"}], ",", 
        RowBox[{"y0", "\[Rule]", "3"}], ",", 
        RowBox[{"w1", "\[Rule]", 
         RowBox[{"-", "13"}]}], ",", 
        RowBox[{"w2", "\[Rule]", 
         RowBox[{"-", "15"}]}]}], "}"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "2000"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7219841147241163`*^9, 3.721984289646007*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
7VI1VSetUd7s0PldVgN62L7wd1SYkx6Ofp1+atLPxOAosTvDgwb4PuLJXHIT
E4O2H9y9ToqLi2+Fyj/w00M/PYksxVU0rKi5NfdKrpN/8sHCw2GjIgL/0S7I
DNKGCosnVlrTmmDYGzZ2xYgJqfM+fiE1seACPSyZtIeAxtbbUt3eXJgJWNmw
yFkfTuwbld4zQYfwLGpU/KJJHnOI8nRRqQzM/S2fLWvQQK0z2bFTvmo4HFHt
OL6VgeVbry34cJbAXqs3T69VE9jznjAdTODicw3Fc1c/k9HmRcfRV2eZqBT1
dYHJMTEsqXf+mUpTRpOg2OcV/1Tg3XORcy2livCjvdUPN9FBplMlzUKZCcyB
pru7xVjweOeXtbqxXLh4pr1MdAMVfhU3eVz6RYCPVNrAjycyIOb7ehG1QR0q
8NFrrowiOlV9q1r/RgrD7z2vfESmYfEhT82eIDom3uA+kxTwo+Pjfe4Rm7lo
1/WrTCKGhqeEZPm7DQxQ/ocXZcxDCctcm6Zt7bRR84i/j9cfKfA+rzJuN/GP
Z9I3T7OjmQIHJv6E+xZRIU6nTfvoOAE33qfdCv/CgZHOx4yIu3Qw6zOXJy9n
w4Ysy5w1G9XgQteveU/tSPBx4MB+71xhXLfkmUgN7zt/ff+PTrfdZAyWVLTq
eENGn/qlvd/uEnimxci8GTiI+dxLF7IYWP86c0JCnYN9B3ZOorwm1vr4W+Xs
JGPSf/cpQ6GjvBTT4vLt7E/8TYcmzpU3kgQ8Pnhg/ysSWBuveFtvTMAizwde
0f+xYc+seVFEEBNUqYbL015w4GliMlU+Wwe29C156W9NBY3O2y9arjzih3ze
ePtDzgzPsjm2gWWhi8Wfv/3WWq+Dh5VbDo8Lcoaz7dIa+X0G6Fk3ukZIh0DT
gVcrSs24eL93RkXmDAmzRIdX1qvR0dZZb7PLx5/8kNHrgx13JbBeLn5l5GNN
6PF5As/qNODwsHnrvjoGmM801mssY0HfwkaL76kEMKOXjsWc5kJY+DOSnBYZ
2vcse/uonAGGkX/HftGEoO3EO25CvgJ81Z2+GzenhnEHhT22CHL38Ob4pgNH
GOi01rCvqZzAROPsPcXHCTyfwX6aHczFO51v7ZwLSLjsnuNHzTV0LOyWzXfb
94H/5LW1mpWAwyws73ZKfNQFXWanaJGwLmg4tizP1iTA9Ritgb6KDY9Xfllj
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
Dgo89oOJFmkz0npaXPwfPsZNsQ==
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-13.038404387601357`, 
   13.038404794443666`}, {-15.297046205131927`, 15.297056594465403`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7219841809322853`*^9, 
  3.721984290363798*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
\
\>"]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.721984626819449*^9, 3.721984807866725*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "@", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", "%63"}], "]"}], ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "1"}], ",", 
      RowBox[{"x0", "\[Rule]", "3"}], ",", 
      RowBox[{"y", "\[Rule]", "1"}], ",", 
      RowBox[{"w1", "\[Rule]", 
       RowBox[{"-", "1"}]}], ",", 
      RowBox[{"w2", "\[Rule]", 
       RowBox[{"-", "2"}]}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.721984218732439*^9, 3.721984219876009*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"3", " ", 
     RowBox[{"Cos", "[", "t", "]"}]}], "-", 
    RowBox[{"Sin", "[", "t", "]"}]}], ",", 
   RowBox[{
    RowBox[{"y0", " ", 
     RowBox[{"Cos", "[", "t", "]"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"Sin", "[", "t", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.721984207239492*^9, 3.721984220076665*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NDSolve", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"\[Alpha]", "''"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          FractionBox[
           RowBox[{"-", "k"}], 
           RowBox[{"m", " ", "r0"}]], 
          RowBox[{"\[Alpha]", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Beta]", "''"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", "g"}], "/", "l"}], "*", 
           RowBox[{"\[Beta]", "[", "t", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{
             RowBox[{"\[Alpha]", "'"}], "[", "t", "]"}], "2"], "*", 
           RowBox[{"\[Beta]", "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{
              RowBox[{"\[Alpha]", "'"}], "[", "t", "]"}], "2"], "/", "l"}], 
           "*", "r0"}]}]}], ",", 
        RowBox[{
         RowBox[{"\[Alpha]", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"\[Beta]", "[", "0", "]"}], "==", 
         RowBox[{
          RowBox[{"5", "/", "180"}], "*", "Pi"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Alpha]", "'"}], "[", "0", "]"}], "\[Equal]", "0.1"}], 
        ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Beta]", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], 
       "}"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r0", "\[Rule]", "0.33"}], ",", 
        RowBox[{"k", "\[Rule]", "1"}], ",", 
        RowBox[{"m", "\[Rule]", "1"}], ",", 
        RowBox[{"g", "\[Rule]", "9.8"}], ",", 
        RowBox[{"l", "\[Rule]", "0.3"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Alpha]", "[", "t", "]"}], ",", 
       RowBox[{"\[Beta]", "[", "t", "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7219893212780867`*^9, 3.721989442815667*^9}, {
  3.72199015413787*^9, 3.721990321797503*^9}, {3.721990363140576*^9, 
  3.721990391756742*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Alpha]", "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj4A0EuU8jJSPjd0wYnD
3cQ/re2lB0l4kD/SUFjDa77VP71+N70IZqA/IqE47Akn4D/bKagh+KSmP9Wb
k3tZVOU/dM3OJQL4qj+7wbiC/fHqPzMz1L8MQK0/gEqXStgX8D9eOh6qte+s
P7tJtw/c7vI/HUcm/sD2qT/ziT6Xnbj1P/ewK7KUpqQ/2iBupGZS+D/kEsgN
6/abP1rNgu1ZJPs/SQCqhyYOhj+J0D+8VMb9P9yuQw/3/Ha/WwqypoYtAEDy
wgQg6r6Vvz63Ng34kwFAhz5xy/iRor94j482beICQFOz7Q/ROKi/f/LaffdM
BEB1f24FMiSsvwX2WabgsAVAUrY7Ik1prb/iJK2RzfwGQJYOmujpL6y/jN7y
ms9kCECU794+5liov43DDGfVtAlA5DOrjja2or9bMxlR8CALQC9ecMui0pW/
p0NZHGqGDEC6FTmei+pxv0t/barn0w1AZAYUH0Y1iD+8RXRWej0PQIxYbs6U
85w/wpunYohHEEC0Bc7XVSGlP+XkrgoD7RBATOqz1L/6qT9vc69BiKARQLnV
+lwW7Kw/pRcaWg9IEkDju+o1XkKtP0EBfgGh/RJAT5lxDnH3qj8cu3sZ4q8T
QEzXSPjfO6Y/oorjEiVWFEBiZw+ZrvafP4+fRJtyChVAXc7G3Z8ljz8oyg8F
wrIVQPndlA3sHFG/AMV038BXFkDIBWjDIk+Rvz4F00jKChdA3ceVaEuuoL8o
W5uT1bEXQDHnAhm8zKa/ePZcbetmGEBvZLCRolurv3SniCgDEBlAMHiWmAtM
rb+vKE5UyrUZQD6sieRA3ay/Ue8MD5xpGkCOL5lzWdOpv5/LNatvERtARWn/
lffRpL9T7VfWTccbQDZkOUMTBpu/R98Tctt5HEC1hVcvnleEv+bmOe9qIB1A
GodbMdOueT/rM1n7BNUdQIF2Uq7Dypc/nJbi6KB9HkDx4Ay4AgSjP4zJBUfs
Ih9AZpjviQh+qD/iQSI0QtYfQLLF0I5IQKw/8mdUAc0+IEC7t/LnfGmtP6ZR
FDB+mSBAojcbGYEArD96IyEXh/IgQJzdBqDbC6g/JADj7pBFIUA7PXKFPGCi
P4F/IQ6gnyFAnMkKt4gylT+0CRUesPMhQNHjbATud3M/mjaFdcVOIkCABD2w
rHWKv59LQoUyqCJAhQw5RGPInb96a7SFoPsiQPfeOy8TZaW/CC6jzRNWI0Dd
EUOcGoCqv2z7RgaIqiNATUI6dW4Hrb8yFFD6//8jQMP62tbxKq2/jOnHTg==

                    "]]}}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 10.}, {-0.057444010189880004`, 
                    0.057445433916071896`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj4A0EuU8jJSPjd0wYnD
3cQ/re2lB0l4kD/SUFjDa77VP71+N70IZqA/IqE47Akn4D/bKagh+KSmP9Wb
k3tZVOU/dM3OJQL4qj+7wbiC/fHqPzMz1L8MQK0/gEqXStgX8D9eOh6qte+s
P7tJtw/c7vI/HUcm/sD2qT/ziT6Xnbj1P/ewK7KUpqQ/2iBupGZS+D/kEsgN
6/abP1rNgu1ZJPs/SQCqhyYOhj+J0D+8VMb9P9yuQw/3/Ha/WwqypoYtAEDy
wgQg6r6Vvz63Ng34kwFAhz5xy/iRor94j482beICQFOz7Q/ROKi/f/LaffdM
BEB1f24FMiSsvwX2WabgsAVAUrY7Ik1prb/iJK2RzfwGQJYOmujpL6y/jN7y
ms9kCECU794+5liov43DDGfVtAlA5DOrjja2or9bMxlR8CALQC9ecMui0pW/
p0NZHGqGDEC6FTmei+pxv0t/barn0w1AZAYUH0Y1iD+8RXRWej0PQIxYbs6U
85w/wpunYohHEEC0Bc7XVSGlP+XkrgoD7RBATOqz1L/6qT9vc69BiKARQLnV
+lwW7Kw/pRcaWg9IEkDju+o1XkKtP0EBfgGh/RJAT5lxDnH3qj8cu3sZ4q8T
QEzXSPjfO6Y/oorjEiVWFEBiZw+ZrvafP4+fRJtyChVAXc7G3Z8ljz8oyg8F
wrIVQPndlA3sHFG/AMV038BXFkDIBWjDIk+Rvz4F00jKChdA3ceVaEuuoL8o
W5uT1bEXQDHnAhm8zKa/ePZcbetmGEBvZLCRolurv3SniCgDEBlAMHiWmAtM
rb+vKE5UyrUZQD6sieRA3ay/Ue8MD5xpGkCOL5lzWdOpv5/LNatvERtARWn/
lffRpL9T7VfWTccbQDZkOUMTBpu/R98Tctt5HEC1hVcvnleEv+bmOe9qIB1A
GodbMdOueT/rM1n7BNUdQIF2Uq7Dypc/nJbi6KB9HkDx4Ay4AgSjP4zJBUfs
Ih9AZpjviQh+qD/iQSI0QtYfQLLF0I5IQKw/8mdUAc0+IEC7t/LnfGmtP6ZR
FDB+mSBAojcbGYEArD96IyEXh/IgQJzdBqDbC6g/JADj7pBFIUA7PXKFPGCi
P4F/IQ6gnyFAnMkKt4gylT+0CRUesPMhQNHjbATud3M/mjaFdcVOIkCABD2w
rHWKv59LQoUyqCJAhQw5RGPInb96a7SFoPsiQPfeOy8TZaW/CC6jzRNWI0Dd
EUOcGoCqv2z7RgaIqiNATUI6dW4Hrb8yFFD6//8jQMP62tbxKq2/jOnHTg==

                    "]]}}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 10.}, {-0.057444010189880004`, 
                    0.057445433916071896`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 10.}}, <>]"& )],
       
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "t", "]"}]}], ",", 
    RowBox[{
     RowBox[{"\[Beta]", "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj7IOOdKGFe2Pzd0wYnD
3cQ/AOHKMS25qj/SUFjDa77VP7w65JX475+/IqE47Akn4D9ePKmBlne1v9Wb
k3tZVOU/gfDyj0F1sb+7wbiC/fHqP+xZ6lKaiYE/gEqXStgX8D8bFG5fEhqz
P7tJtw/c7vI/BmqVkFe5sz/ziT6Xnbj1PyiCGvpxRIE/2iBupGZS+D8OlSxN
gWCwv1rNgu1ZJPs/TotDaslQtb+J0D+8VMb9Px0HZKRL6Z6/WwqypoYtAEDl
sYLM6tqnPz63Ng34kwFAzJ13JKtItj94j482beICQBhD5RUC0qo/f/LaffdM
BEAZGZiPPM2fvwX2WabgsAVA4UAiVarAtb/iJK2RzfwGQEJimMEs0LC/jN7y
ms9kCECEmFed+1OKP43DDGfVtAlA/0z7eqe3sz9bMxlR8CALQAkChIdzQ7M/
p0NZHGqGDEBsCPARLuxwP0t/barn0w1AXnAt7Wgjsb+8RXRWej0PQDthzmR4
+rS/wpunYohHEECsqUNZFleav+XkrgoD7RBAtVlsZt/eqT9vc69BiKARQBEH
kAr3LLY/pRcaWg9IEkAzuyBNDnOoP0EBfgGh/RJALUvo93WHor8cu3sZ4q8T
QPOQ42AI9bW/oorjEiVWFECUkqBIF2ivv4+fRJtyChVAmgWfA6aRkz8oyg8F
wrIVQOF0hDycdbQ/AMV038BXFkAqNDDtpImzPz4F00jKChdADnlu9xk9eD8o
W5uT1bEXQDyLkeod67C/ePZcbetmGEDgZ/uryDG1v3SniCgDEBlAtJYNGSkQ
nL+vKE5UyrUZQHctrc0RQak/Ue8MD5xpGkASyHUxgje2P5/LNatvERtA2UwZ
HM0JqT9T7VfWTccbQHkWGP1j7KG/R98Tctt5HEAabr9QeNq1v+bmOe9qIB1A
dSBx/q6Qr7/rM1n7BNUdQEte8CtfAZM/nJbi6KB9HkAaogN8I120P4zJBUfs
Ih9AFcMAbMx6sz/iQSI0QtYfQPTX3EJoJ3c/8mdUAc0+IEAokaSW+/ywv6ZR
FDB+mSBA65Yyz2Iutb96IyEXh/IgQEyK/8MJY5e/JADj7pBFIUBgnL2wgF2r
P4F/IQ6gnyFAW23KJzs5tj+0CRUesPMhQLQWyjXXA6c/mjaFdcVOIkDWSog6
W0Ckv59LQoUyqCJApk0nBnINtr96a7SFoPsiQLkdQpvAsq2/CC6jzRNWI0A+
cjL0KjSYP2z7RgaIqiNAfgNow9zWtD8yFFD6//8jQNvvrg6cTLI/27u9YA==

                    "]]}}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 10.}, {-0.08614266062004691, 
                    0.08726646259967474}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj7IOOdKGFe2Pzd0wYnD
3cQ/AOHKMS25qj/SUFjDa77VP7w65JX475+/IqE47Akn4D9ePKmBlne1v9Wb
k3tZVOU/gfDyj0F1sb+7wbiC/fHqP+xZ6lKaiYE/gEqXStgX8D8bFG5fEhqz
P7tJtw/c7vI/BmqVkFe5sz/ziT6Xnbj1PyiCGvpxRIE/2iBupGZS+D8OlSxN
gWCwv1rNgu1ZJPs/TotDaslQtb+J0D+8VMb9Px0HZKRL6Z6/WwqypoYtAEDl
sYLM6tqnPz63Ng34kwFAzJ13JKtItj94j482beICQBhD5RUC0qo/f/LaffdM
BEAZGZiPPM2fvwX2WabgsAVA4UAiVarAtb/iJK2RzfwGQEJimMEs0LC/jN7y
ms9kCECEmFed+1OKP43DDGfVtAlA/0z7eqe3sz9bMxlR8CALQAkChIdzQ7M/
p0NZHGqGDEBsCPARLuxwP0t/barn0w1AXnAt7Wgjsb+8RXRWej0PQDthzmR4
+rS/wpunYohHEECsqUNZFleav+XkrgoD7RBAtVlsZt/eqT9vc69BiKARQBEH
kAr3LLY/pRcaWg9IEkAzuyBNDnOoP0EBfgGh/RJALUvo93WHor8cu3sZ4q8T
QPOQ42AI9bW/oorjEiVWFECUkqBIF2ivv4+fRJtyChVAmgWfA6aRkz8oyg8F
wrIVQOF0hDycdbQ/AMV038BXFkAqNDDtpImzPz4F00jKChdADnlu9xk9eD8o
W5uT1bEXQDyLkeod67C/ePZcbetmGEDgZ/uryDG1v3SniCgDEBlAtJYNGSkQ
nL+vKE5UyrUZQHctrc0RQak/Ue8MD5xpGkASyHUxgje2P5/LNatvERtA2UwZ
HM0JqT9T7VfWTccbQHkWGP1j7KG/R98Tctt5HEAabr9QeNq1v+bmOe9qIB1A
dSBx/q6Qr7/rM1n7BNUdQEte8CtfAZM/nJbi6KB9HkAaogN8I120P4zJBUfs
Ih9AFcMAbMx6sz/iQSI0QtYfQPTX3EJoJ3c/8mdUAc0+IEAokaSW+/ywv6ZR
FDB+mSBA65Yyz2Iutb96IyEXh/IgQEyK/8MJY5e/JADj7pBFIUBgnL2wgF2r
P4F/IQ6gnyFAW23KJzs5tj+0CRUesPMhQLQWyjXXA6c/mjaFdcVOIkDWSog6
W0Ckv59LQoUyqCJApk0nBnINtr96a7SFoPsiQLkdQpvAsq2/CC6jzRNWI0A+
cjL0KjSYP2z7RgaIqiNAfgNow9zWtD8yFFD6//8jQNvvrg6cTLI/27u9YA==

                    "]]}}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 10.}, {-0.08614266062004691, 
                    0.08726646259967474}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 10.}}, <>]"& )],
       
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "t", "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.721989444399252*^9, 3.721990164558978*^9, {3.7219902936080217`*^9, 
   3.721990329420149*^9}, {3.721990367226866*^9, 3.721990392180912*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Alpha]", "[", "t", "]"}], ",", 
        RowBox[{"\[Beta]", "[", "t", "]"}]}], "}"}], "/.", "%100"}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.721990397925414*^9, 3.721990446620661*^9}, {
  3.7219905204732637`*^9, 3.721990564773381*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Model1", "[", 
    RowBox[{
    "r0_", ",", "k_", ",", "m_", ",", "l_", ",", "\[Alpha]0_", ",", 
     "\[Beta]0_", ",", "W\[Alpha]_", ",", "W\[Beta]_", ",", "EP_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "t", ",", "g", ",", "data"}], 
      "}"}], ",", 
     RowBox[{
      RowBox[{"data", "=", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"\[Alpha]", "''"}], "[", "t", "]"}], "\[Equal]", 
               RowBox[{
                RowBox[{
                 FractionBox[
                  RowBox[{"-", "k"}], 
                  RowBox[{"m", " ", "r0"}]], 
                 RowBox[{"\[Alpha]", "[", "t", "]"}]}], "+", 
                RowBox[{"2", "*", 
                 RowBox[{
                  RowBox[{"\[Beta]", "'"}], "[", "t", "]"}], "*", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "'"}], "[", "t", "]"}]}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Beta]", "''"}], "[", "t", "]"}], "\[Equal]", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "g"}], "/", "l"}], "*", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Beta]", "[", "t", "]"}], "]"}]}], "+", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{
                   RowBox[{"\[Alpha]", "'"}], "[", "t", "]"}], "2"], "*", 
                 RowBox[{"\[Beta]", "[", "t", "]"}]}], "+", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{
                    RowBox[{"\[Alpha]", "'"}], "[", "t", "]"}], "2"], "/", 
                  "l"}], "*", "r0"}]}]}], ",", 
              RowBox[{
               RowBox[{"\[Alpha]", "[", "0", "]"}], "\[Equal]", "\[Alpha]0"}],
               ",", 
              RowBox[{
               RowBox[{"\[Beta]", "[", "0", "]"}], "==", "\[Beta]0"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Alpha]", "'"}], "[", "0", "]"}], "\[Equal]", 
               "W\[Alpha]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Beta]", "'"}], "[", "0", "]"}], "\[Equal]", 
               "W\[Beta]"}]}], "}"}], "/.", 
            RowBox[{"{", 
             RowBox[{"g", "\[Rule]", "9.8"}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Alpha]", "[", "t", "]"}], ",", 
             RowBox[{"\[Beta]", "[", "t", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "EP"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"r0", "*", 
              RowBox[{"\[Alpha]", "[", "t", "]"}]}], ",", 
             RowBox[{"l", "*", 
              RowBox[{"\[Beta]", "[", "t", "]"}]}]}], "}"}], "/.", "data"}], 
          "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "EP"}], "}"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Model2", "[", 
    RowBox[{
    "r0_", ",", "m_", ",", "l_", ",", "a_", ",", "\[Alpha]0_", ",", 
     "\[Beta]0_", ",", "W\[Alpha]_", ",", "W\[Beta]_", ",", "EP_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "t", ",", "g", ",", "data"}], 
      "}"}], ",", 
     RowBox[{
      RowBox[{"data", "=", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"\[Alpha]", "''''"}], "[", "t", "]"}], "\[Equal]", 
               RowBox[{
                RowBox[{"-", "a"}], "*", 
                RowBox[{"\[Alpha]", "[", "t", "]"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Beta]", "''"}], "[", "t", "]"}], "\[Equal]", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "g"}], "/", "l"}], "*", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Beta]", "[", "t", "]"}], "]"}]}], "+", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{
                   RowBox[{"\[Alpha]", "'"}], "[", "t", "]"}], "2"], "*", 
                 RowBox[{"\[Beta]", "[", "t", "]"}]}], "+", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{
                    RowBox[{"\[Alpha]", "'"}], "[", "t", "]"}], "2"], "/", 
                  "l"}], "*", "r0"}]}]}], ",", 
              RowBox[{
               RowBox[{"\[Alpha]", "[", "0", "]"}], "\[Equal]", "\[Alpha]0"}],
               ",", 
              RowBox[{
               RowBox[{"\[Beta]", "[", "0", "]"}], "==", "\[Beta]0"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Alpha]", "'"}], "[", "0", "]"}], "\[Equal]", 
               "W\[Alpha]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Beta]", "'"}], "[", "0", "]"}], "\[Equal]", 
               "W\[Beta]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Alpha]", "''"}], "[", "0", "]"}], "\[Equal]", 
               "0"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Alpha]", "'''"}], "[", "0", "]"}], "\[Equal]", 
               "0"}]}], "}"}], "/.", 
            RowBox[{"{", 
             RowBox[{"g", "\[Rule]", "9.8"}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Alpha]", "[", "t", "]"}], ",", 
             RowBox[{"\[Beta]", "[", "t", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "EP"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"r0", "*", 
              RowBox[{"\[Alpha]", "[", "t", "]"}]}], ",", 
             RowBox[{"l", "*", 
              RowBox[{"\[Beta]", "[", "t", "]"}]}]}], "}"}], "/.", "data"}], 
          "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "EP"}], "}"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AnimateModel1", "[", 
    RowBox[{
    "r0_", ",", "k_", ",", "m_", ",", "l_", ",", "\[Alpha]0_", ",", 
     "\[Beta]0_", ",", "W\[Alpha]_", ",", "W\[Beta]_", ",", "EP_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "t", ",", "g", ",", "data"}], 
      "}"}], ",", 
     RowBox[{
      RowBox[{"data", "=", 
       RowBox[{
        RowBox[{"NDSolve", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"\[Alpha]", "''"}], "[", "t", "]"}], "\[Equal]", 
                RowBox[{
                 RowBox[{
                  FractionBox[
                   RowBox[{"-", "k"}], 
                   RowBox[{"m", " ", "r0"}]], 
                  RowBox[{"\[Alpha]", "[", "t", "]"}]}], "+", 
                 RowBox[{"2", "*", 
                  RowBox[{
                   RowBox[{"\[Beta]", "'"}], "[", "t", "]"}], "*", 
                  RowBox[{
                   RowBox[{"\[Alpha]", "'"}], "[", "t", "]"}]}]}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"\[Beta]", "''"}], "[", "t", "]"}], "\[Equal]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "g"}], "/", "l"}], "*", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"\[Beta]", "[", "t", "]"}], "]"}]}], "+", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{
                    RowBox[{"\[Alpha]", "'"}], "[", "t", "]"}], "2"], "*", 
                  RowBox[{"\[Beta]", "[", "t", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{
                    RowBox[{"\[Alpha]", "'"}], "[", "t", "]"}], "2"], "/", 
                   "l"}], "*", "r0"}]}]}], ",", 
               RowBox[{
                RowBox[{"\[Alpha]", "[", "0", "]"}], "\[Equal]", 
                "\[Alpha]0"}], ",", 
               RowBox[{
                RowBox[{"\[Beta]", "[", "0", "]"}], "==", "\[Beta]0"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"\[Alpha]", "'"}], "[", "0", "]"}], "\[Equal]", 
                "W\[Alpha]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"\[Beta]", "'"}], "[", "0", "]"}], "\[Equal]", 
                "W\[Beta]"}]}], "}"}], "/.", 
             RowBox[{"{", 
              RowBox[{"g", "\[Rule]", "9.8"}], "}"}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Alpha]", "[", "t", "]"}], ",", 
              RowBox[{"\[Beta]", "[", "t", "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "EP"}], "}"}]}], "]"}], "//", 
        "Quiet"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Animate", "[", 
        RowBox[{
         RowBox[{"Show", "[", 
          RowBox[{
           RowBox[{"ParametricPlot", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"r0", "+", 
                    RowBox[{"l", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Beta]", "[", "t", "]"}], "]"}]}]}], ")"}], "*", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"r0", "+", 
                    RowBox[{"l", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Beta]", "[", "t", "]"}], "]"}]}]}], ")"}], "*", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "]"}]}]}], "}"}], "/.",
                 "data"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "EP"}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", "White"}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
           RowBox[{"ParametricPlot", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"r0", "+", 
                    RowBox[{"l", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Beta]", "[", "t", "]"}], "]"}]}]}], ")"}], "*", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"r0", "+", 
                    RowBox[{"l", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Beta]", "[", "t", "]"}], "]"}]}]}], ")"}], "*", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "]"}]}]}], "}"}], "/.",
                 "data"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "x"}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], "]"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "EP"}], "}"}], ",", 
         RowBox[{"RefreshRate", "\[Rule]", "60"}], ",", 
         RowBox[{"AnimationRate", "\[Rule]", ".1"}]}], "]"}], "//", 
       "Quiet"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.721990575830411*^9, 3.721990725862214*^9}, {
   3.721990757937243*^9, 3.721990898778996*^9}, 3.721991064171753*^9, {
   3.7219911363088408`*^9, 3.721991223870838*^9}, 3.7219916245033503`*^9, {
   3.721991848116148*^9, 3.721991869210792*^9}, {3.7219919518562*^9, 
   3.72199205977326*^9}, {3.721992096078106*^9, 3.721992262134117*^9}, {
   3.7219923932818623`*^9, 3.72199242556592*^9}, {3.721992466706502*^9, 
   3.721992471360442*^9}, {3.722077603355673*^9, 3.722077606820731*^9}, {
   3.722077755857992*^9, 3.722077759588468*^9}, 3.722078117640711*^9, {
   3.722078168178278*^9, 3.7220781723713408`*^9}, {3.7220782294587193`*^9, 
   3.722078230502997*^9}, {3.722078334306863*^9, 3.722078337016177*^9}, {
   3.722152845443255*^9, 3.7221528918207827`*^9}, {3.722160905737609*^9, 
   3.7221610135591097`*^9}, 3.722161050719347*^9, {3.7221612249963207`*^9, 
   3.7221612545448017`*^9}, {3.7221613105914097`*^9, 3.722161324951507*^9}, 
   3.722161372138135*^9, {3.722305435767889*^9, 3.722305456705056*^9}, {
   3.7223055041349897`*^9, 3.722305526794876*^9}, {3.7223057913243*^9, 
   3.722305801046452*^9}, 3.722305875599699*^9, {3.722305917239429*^9, 
   3.722305930230566*^9}, {3.7223060411242247`*^9, 3.7223060413146467`*^9}, 
   3.722306071581216*^9, {3.7223070539078608`*^9, 3.7223070544650917`*^9}, 
   3.7223073855357523`*^9, {3.722314275743124*^9, 3.7223142873185663`*^9}, {
   3.7223144069241247`*^9, 3.7223144114842978`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<test.gif\>\"", ",", 
   RowBox[{"AnimateModel1", "[", 
    RowBox[{"0.5", ",", "0.1", ",", "0.5", ",", "0.3", ",", "0", ",", 
     RowBox[{
      RowBox[{"5", "/", "180"}], "*", "Pi"}], ",", "0.1", ",", "0", ",", 
     "20"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.721991775382773*^9, 3.721991828270734*^9}, {
   3.7219920639266233`*^9, 3.7219920652685137`*^9}, 3.721992374135783*^9, {
   3.721992561674601*^9, 3.721992566928796*^9}, {3.722057274327702*^9, 
   3.722057297126259*^9}, {3.7220573496777277`*^9, 3.722057349853109*^9}}],

Cell[BoxData["\<\"test.gif\"\>"], "Output",
 CellChangeTimes->{3.722057299786371*^9, 3.722057351356661*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Model2", "[", 
  RowBox[{"0.5", ",", "0.1", ",", "0.5", ",", "10", ",", "0", ",", 
   RowBox[{
    RowBox[{"5", "/", "180"}], "*", "Pi"}], ",", "0.1", ",", "0", ",", "10"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.722077931945279*^9, 3.722077968808813*^9}, {
  3.72207807231183*^9, 3.7220780723806343`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
KcqsAendqunHTEYQx5P7y0qfa8Ajmquv971HUL398L8H+zWA+xH1wfnOEbTB
FaR61KIWvFo4pzlq8x1llfuMedPXgVMS6mbViaOo0VM6l8ahHgRvPaziQaNI
MKvaxS+qHlD+nSxNnR9Fgx2GHG+r68GCJ+2xaeUxdFLk3qeeEw2A+WdUuf/Q
GFL8WvWagtgApC7Y/LfLOYEGhy/HqvY3gpiS1NTzlyZQFy2WaWenEfjTlII3
DydQy/pCniZvE5jzKop83T2BuG6uyr1yaQKlClsjFX6T6PCy7o3eP02ga1F8
tTZ/Eh33PepxwNMMjn0zKR8ankRBpsonG2Ez6JCUQZJcU6jIqezyaFAzOFd5
jV3JYwo1/m5UzjyBwMvg/vsskVNI0+tOkpQYAqerH3T+xU2hlvbpcaiFgKCW
6tba5ym096L8GPULBJJdm4+ZSE+jEvkSFcodBOj3KJr356eReBNcV3doAXGR
B/f9DqbRyzJla60HLWCz5YfA8VM/kNFTfksW3xbQo5K1p3DpB+qqu/rt15sW
wLbWF7Oe/QMFCN+hnWlqATE8d29WNPxA1N+96E68bwFZl4k0/gM/UJnRN8e1
/hbgvnfMQeboDMqc+i58Yq4FJPWq/py+NYNMFhVqbalbwUsJ2UdTT2eQle/W
swymVjDoWp0292YGtQf7EXCcrSA0bU39aPsMYuSsENgQawUnvY1suEdnkKZd
RoCaXCvoZC16pro1gwICOowuq7SCLy3K9KFCs+jVBd9b1Rdbwab9J6Hq/2YR
E83PYia9ViC9oPxy2XgWDb4/FyprSJbPV5l2K2gW/dbN2a280QqYT02uEFJn
kdgSFY7HrhXg7lKMrFbOIq75jC1dx1YApPCfI+ZmUWf/l5rV+63ghDjfq7v7
s4hlUmbU0KMVXOOspTNhn0MhPQM73l5kNtTi1pCZQ3rYGHYX31ZwPFc1WurS
HDofIq7GG0DWh+at6hnrOZQ0p+ue/KIVZO4dXznpOYdEMl+2fQ9pBaYrT4oO
8XOIXUuwq+RlK/gwWWj9t3EOlR30RlyMJp83MjDfG5xDk+waL9JiWsHM7Krb
3socwmRR1jTFtoKjPIWuf6nmkbDSLWl8fCsIm8bwH56ZR4PpxkuGia1A+Pjf
G1TK8+jmovtWe1IruPWt+iftlXlEd37XYD+5FZzLWkhluT2P8uqIR/fftoLn
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
vBx7qdqtlVPDOvCrMxRdDMXidBfdFDQvTGHIXWCp7M6Z+gp29z/yWGVqIRcY
cuFsKj1Rz/3ir+DoQw0XGO5N9Dysvenu12p5i87PBb5sE0ZsQlrcmw6oEbkc
F1h9M+jT7o1190EdgycxLS6QXzpqtcRf0ENQ+MX9+Znj+JMH+9oHlh4b1wCz
A4Ur/N3bv2IwkelxxPxhf1/MFa7PuZwMqOj1wGsMKVfruULMlNyaEDjheR9r
NBob7Ar1P8puW6VhPUsA133vAld4jWd06Guvp+cX1/RbgV2uMEy+Krva9LFn
wPOXMbk/XaFk3eBO3ZVJz5rEyyFj59xg2ZC1IGaMweuKmaHRZVk3qOWf1vnd
T9XLeZr91ENLN9hyP5MKmY72ev+E1edynBt0PrLkavBu8NqLvBU9Vu4Gq2js
bfrs/nixLcnz5n5wg3Q+QkfMdELe/YmNCgH/3GC04bAIs6Gtt0gey2uPS+7w
ValglYZKrvdZE/pbkUR3eEUBO6FV88G7UGOXad/HHabvVK53VdH6WMQUmOTl
u0MD2+jB3Qx1HxnrXoxRtztMMrk6qfAvweevYGusxB93SGGX8YfwttuHhl9W
VJjdA4aRR/VT/znpW97jQKlE8oBOf3i+6zoo+670/9q57ucBt4PI5oNZYnyZ
nJameh54QOPKNSadvXbfXN0f6bheD7jItBVYJnDoW0Lxc717wwPyu3t5fXgk
7+czbjPlx+UJF9je1R3Zhfv1nJS4fFXDE75/GVbtZtfsJ7Ne/pon2BMS+3tC
lu/t+onK3nUVeOwJPb89bHp7kuAf0MVOTRryhJappnvRhSH+tSfmwuL+84R2
TgMBz5wb/beW/9z9KuQFz9Q3vJw23/Ffx7RfMTT0goLnPkfeD8Nf1zQS5/4R
7QXvIqYBOj0h1yU7bivnVHnBU++i0/SUmq7//XnTw27SCw4mmoz9/rF7PdlF
yU+V0hsWf00M8O+SC8imlxPRkPGGfeb8tEYfwwOEmG1d3ey84Xx/tYm2YGvA
JBPZycdp3nD1pt5qevNhwKj8cP+/Fm8oaqapcEobBGJsl+65/PSGSkoBz8fd
YwKxNB2Ev+d9oJJ/9Xff5s7AvUJcTC7qAy+4XG86STwVRO5yG5j4+0DFTx2q
CcykoKkXBqqYRz5ws/cCSRCbGGT2NdNVYNAHhlTN9bbW9QXp3Cjyld73gdss
7nk3ymiD3Wvu515h8YVh3Z8efMvQDbaykiFoX/aFjbn3+8OKMoMjb47EhSO+
0DQuJeI083iwmNQXqzpzX7iXcK8w8vBCSBrGtuo/P1+I0Jen/wuzCHlUzGWq
fdsXMtbyx2+XPwwhRsUhVY98YcZBTheT+VzIEFeR4cXGY0zHWKbtLBDqPoD3
vTPkC19TfjCaZHUL1Qd1YYw/fOGQzJ6iR0FV6MBlMdOiQ1/44ZdhkEnmemjH
O9PfV8/7wTzkMwvckQkTNX3CNnfFDzKecmimvRwallLB3XOX6Hfcjy0ShvZt
YTmVscO6Vn7w6X5/QbEveTjvgigXa6AfHNGwOXUzhhT+jII743eKH4w0wuEt
CpPD8z3OUb0v8YPXWUukm6iGw32LNF1rX/vBTM4SVIeXJSJ65cOdsjE/6Dmm
bB9hbh5RPCJnW/rbD2qFmy4axD+KGMgZaHp5yh9SYyPEMobmI072+ka84fCH
XRwRJ76ai0bGdbxImJPxh1ZzLj0vu30jb0s2NVNr+cNbgezmhIC6yMV71pvy
Tv7wLKZ35Nvd/yLDPjMxhUb6wzapYumbQ9eipF+ubrZl+0NDmrLYAs6EKJLi
02C65/7wzkK0RDz/YFRncmaIS48/tFvm785oY7phQ/Ns7N20Pyzl2YvE7Zvd
eH3bUjJryx8qFcc3/Dz94MbzxvAg57PXYdXNpnMZxtM3hryw1zgYr8Oc07uZ
u9urN/4HCAHbWQ==
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-19.230279461396282`, 
   25.607327412574104`}, {-0.07389694905291928, 3.2587750348858604`*^26}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7220779585823*^9, 3.7220780685338383`*^9, 
  3.722078240082512*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Model1", "[", 
    RowBox[{"0.2", ",", "0.01", ",", "0.5", ",", "0.05", ",", "0", ",", 
     RowBox[{
      RowBox[{"5", "/", "180"}], "*", "Pi"}], ",", "0.1", ",", "0", ",", 
     "20"}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.722057370709928*^9, 3.7220573710370283`*^9}, {
   3.7221608421567907`*^9, 3.722160844738852*^9}, 3.7221610933783283`*^9, {
   3.722161384848233*^9, 3.722161431826911*^9}, 3.7221614780379257`*^9, {
   3.722161519173324*^9, 3.7221615285002947`*^9}, {3.722305636831995*^9, 
   3.722305638676416*^9}, {3.72230569887963*^9, 3.7223057006109133`*^9}, {
   3.72230584224184*^9, 3.722305842396656*^9}, 3.722306287707732*^9, 
   3.722314691386498*^9, {3.722314950548232*^9, 3.7223150000463343`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-0.05310660215889425, 
   0.05310564987224031}, {-0.004354175734485578, 0.004363323129985824}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7220573176817293`*^9, 3.722057371453476*^9, {3.722077898804914*^9, 
   3.722077906532979*^9}, {3.722152882717484*^9, 3.722152895603286*^9}, 
   3.722160845302722*^9, 3.722161020129422*^9, 3.722161058993326*^9, 
   3.7221610943235807`*^9, {3.7221613762066917`*^9, 3.722161432843299*^9}, 
   3.72216147872474*^9, {3.722161520105191*^9, 3.7221615290689583`*^9}, {
   3.72230548839291*^9, 3.722305530502597*^9}, 3.7223056393159647`*^9, 
   3.7223057011912937`*^9, {3.722305829226521*^9, 3.722305843174201*^9}, 
   3.7223062882756157`*^9, 3.722307060862256*^9, 3.722314692523745*^9, {
   3.722314951145259*^9, 3.722315000629994*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\[Beta]", "]"}]], "Input",
 CellChangeTimes->{{3.721990323423978*^9, 3.7219903268428297`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"ParametricPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"#1", " ", "t"}], "]"}], ",", 
           RowBox[{"Sin", "[", 
            RowBox[{"#2", " ", "t"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "x"}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}]}], "}"}]}]}], "]"}], 
       ",", 
       RowBox[{"Graphics", "[", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"#1", " ", "x"}], "]"}], ",", 
           RowBox[{"Sin", "[", 
            RowBox[{"#2", " ", "x"}], "]"}]}], "}"}], "]"}], "]"}]}], "]"}], 
     "&"}], "[", 
    RowBox[{"11", ",", "13"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
   RowBox[{"RefreshRate", "\[Rule]", "60"}], ",", 
   RowBox[{"AnimationRate", "\[Rule]", ".01"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.721989483965362*^9, 3.721989574496003*^9}, {
   3.721989635376401*^9, 3.721989644931733*^9}, {3.7219896819577703`*^9, 
   3.7219897070240803`*^9}, {3.721989758215432*^9, 3.7219898628743134`*^9}, 
   3.7219899084455757`*^9, {3.721989955998631*^9, 3.721989962377161*^9}, 
   3.72198999472619*^9, {3.721990068925622*^9, 3.7219900703931093`*^9}, {
   3.722057261118238*^9, 3.722057264856366*^9}, {3.72230548213805*^9, 
   3.722305483035673*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 0.6299487448318346, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x$$], -Pi, Pi}}, Typeset`size$$ = {
    360., {178., 182.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`x$111655$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x$$ = -Pi}, 
      "ControllerVariables" :> {
        Hold[$CellContext`x$$, $CellContext`x$111655$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> (Show[
        ParametricPlot[{
          Sin[# $CellContext`t], 
          Sin[#2 $CellContext`t]}, {$CellContext`t, 0, $CellContext`x$$}, 
         PlotRange -> {{-1.1, 1.1}, {-1.1, 1.1}}], 
        Graphics[
         Point[{
           Sin[# $CellContext`x$$], 
           Sin[#2 $CellContext`x$$]}]]]& )[11, 13], 
      "Specifications" :> {{$CellContext`x$$, -Pi, Pi, RefreshRate -> 60, 
         AnimationRate -> 0.01, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {214., 220.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.721989527366312*^9, {3.721989562327992*^9, 3.721989574975081*^9}, 
   3.72198964545142*^9, {3.721989685960394*^9, 3.721989707502343*^9}, {
   3.7219898359353743`*^9, 3.721989863467352*^9}, 3.7219899090162773`*^9, 
   3.721989962792183*^9, 3.7219899954162073`*^9, 3.721990071007922*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Model1", "[", 
    RowBox[{
    "r0_", ",", "k_", ",", "m_", ",", "l_", ",", "\[Mu]_", ",", "\[Alpha]0_", 
     ",", "\[Beta]0_", ",", "W\[Alpha]_", ",", "W\[Beta]_", ",", "EP_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "t", ",", "g", ",", "data"}], 
      "}"}], ",", 
     RowBox[{
      RowBox[{"data", "=", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"\[Alpha]", "''"}], "[", "t", "]"}], "\[Equal]", 
               RowBox[{
                RowBox[{
                 FractionBox[
                  RowBox[{"-", "k"}], 
                  RowBox[{"m", " ", "r0"}]], 
                 RowBox[{"\[Alpha]", "[", "t", "]"}]}], "+", 
                RowBox[{"2", "*", 
                 RowBox[{
                  RowBox[{"\[Beta]", "'"}], "[", "t", "]"}], "*", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "'"}], "[", "t", "]"}]}], "-", 
                "\[Mu]"}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Beta]", "''"}], "[", "t", "]"}], "\[Equal]", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "g"}], "/", "l"}], "*", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Beta]", "[", "t", "]"}], "]"}]}], "+", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{
                   RowBox[{"\[Alpha]", "'"}], "[", "t", "]"}], "2"], "*", 
                 RowBox[{"\[Beta]", "[", "t", "]"}]}], "+", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{
                    RowBox[{"\[Alpha]", "'"}], "[", "t", "]"}], "2"], "/", 
                  "l"}], "*", "r0"}]}]}], ",", 
              RowBox[{
               RowBox[{"\[Alpha]", "[", "0", "]"}], "\[Equal]", "\[Alpha]0"}],
               ",", 
              RowBox[{
               RowBox[{"\[Beta]", "[", "0", "]"}], "==", "\[Beta]0"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Alpha]", "'"}], "[", "0", "]"}], "\[Equal]", 
               "W\[Alpha]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Beta]", "'"}], "[", "0", "]"}], "\[Equal]", 
               "W\[Beta]"}]}], "}"}], "/.", 
            RowBox[{"{", 
             RowBox[{"g", "\[Rule]", "9.8"}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Alpha]", "[", "t", "]"}], ",", 
             RowBox[{"\[Beta]", "[", "t", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "EP"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"r0", "*", 
              RowBox[{"\[Alpha]", "[", "t", "]"}]}], ",", 
             RowBox[{"l", "*", 
              RowBox[{"\[Beta]", "[", "t", "]"}]}]}], "}"}], "/.", "data"}], 
          "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "EP"}], "}"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.722315048889015*^9, 3.722315162445539*^9}, {
  3.7223152069785233`*^9, 3.722315252428421*^9}, {3.722315293395763*^9, 
  3.7223153488324347`*^9}, {3.722315461896307*^9, 3.7223154988662567`*^9}, {
  3.722315531714547*^9, 3.722315532688551*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Model3", "[", 
  RowBox[{"0.2", ",", "0.01", ",", "0.5", ",", "0.05", ",", "0", ",", 
   RowBox[{
    RowBox[{"5", "/", "180"}], "*", "Pi"}], ",", "0.1", ",", "0", ",", "20"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.722315265930244*^9, 3.72231527741879*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","litarg",
   "\"To avoid possible ambiguity, the arguments of the dependent variable in \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"\
\[Alpha]$10658\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, None]], \
\\\"[\\\", \\\"t$10658\\\", \\\"]\\\"}], \\\"\[Equal]\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"0.1`\\\"}], \\\" \\\", RowBox[{\\\"\
\[Alpha]$10658\\\", \\\"[\\\", \\\"t$10658\\\", \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{\\\"2\\\", \\\" \\\", RowBox[{SuperscriptBox[\\\"\[Alpha]$10658\\\", \
\\\"\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \\\"t$10658\\\", \
\\\"]\\\"}], \\\" \\\", RowBox[{SuperscriptBox[\\\"\[Beta]$10658\\\", \\\"\
\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \\\"t$10658\\\", \
\\\"]\\\"}]}]}]}], \\\",\\\", \
RowBox[{RowBox[{RowBox[{\\\"0.24500000000000002`\\\", \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \\\"+\\\", \
RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[Beta]$10658\\\", \\\"[\\\", \
\\\"t$10658\\\", \\\"]\\\"}], \\\"]\\\"}]}], \\\")\\\"}]}], \\\"+\\\", \
RowBox[{\\\"0.005`\\\", \\\" \\\", \
SuperscriptBox[RowBox[{\\\"\[Alpha]$10658\\\", \\\"[\\\", \\\"t$10658\\\", \\\
\"]\\\"}], \\\"2\\\"]}], \\\"+\\\", RowBox[{\\\"0.0006250000000000001`\\\", \
\\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{SuperscriptBox[RowBox[{SuperscriptBox[\\\"\[Alpha]$10658\\\", \\\"\
\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \\\"t$10658\\\", \
\\\"]\\\"}], \\\"2\\\"], \\\"+\\\", \
SuperscriptBox[RowBox[{SuperscriptBox[\\\"\[Beta]$10658\\\", \
\\\"\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \\\"t$10658\\\", \
\\\"]\\\"}], \\\"2\\\"]}], \\\")\\\"}]}]}], \\\"\[Equal]\\\", \
RowBox[{RowBox[{\\\"0.24500000000000002`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \\\"+\\\", RowBox[{\\\"Cos\\\", \\\"[\
\\\", RowBox[{\\\"\[Beta]$10658\\\", \\\"[\\\", \\\"0\\\", \\\"]\\\"}], \\\"]\
\\\"}]}], \\\")\\\"}]}], \\\"+\\\", RowBox[{\\\"0.005`\\\", \\\" \\\", \
SuperscriptBox[RowBox[{\\\"\[Alpha]$10658\\\", \\\"[\\\", \\\"0\\\", \
\\\"]\\\"}], \\\"2\\\"]}], \\\"+\\\", RowBox[{\\\"0.0006250000000000001`\\\", \
\\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{SuperscriptBox[RowBox[{SuperscriptBox[\\\"\[Alpha]$10658\\\", \\\"\
\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \\\"0\\\", \
\\\"]\\\"}], \\\"2\\\"], \\\"+\\\", \
SuperscriptBox[RowBox[{SuperscriptBox[\\\"\[Beta]$10658\\\", \
\\\"\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \\\"0\\\", \\\"]\
\\\"}], \\\"2\\\"]}], \\\")\\\"}]}]}]}]}], \\\"}\\\"}]\\) should literally \
match the independent variables.\"",2,14,311,24143912953325987473,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.7223152836354847`*^9, 3.7223153064471607`*^9}, 
   3.722315353347081*^9}],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"NDSolve\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"\[Alpha]$10658\\\", \\\"\[Prime]\
\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \
\\\"0.00040816326530612246`\\\", \\\"]\\\"}], \\\"\[Equal]\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"0.1`\\\"}], \\\" \\\", RowBox[{\\\"\
\[Alpha]$10658\\\", \\\"[\\\", \\\"0.00040816326530612246`\\\", \
\\\"]\\\"}]}], \\\"+\\\", RowBox[{\\\"2\\\", \\\" \\\", \
RowBox[{SuperscriptBox[\\\"\[Alpha]$10658\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", \\\"0.00040816326530612246`\\\", \
\\\"]\\\"}], \\\" \\\", RowBox[{SuperscriptBox[\\\"\[Beta]$10658\\\", \\\"\
\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \
\\\"0.00040816326530612246`\\\", \\\"]\\\"}]}]}]}], \\\",\\\", \
RowBox[{RowBox[{RowBox[{\\\"0.24500000000000002`\\\", \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \\\"+\\\", \
RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\")\\\"}]}], \\\"+\\\", RowBox[{\
\\\"0.005`\\\", \\\" \\\", SuperscriptBox[RowBox[{\\\"\[Alpha]$10658\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\"2\\\"]}], \\\"+\\\", \
RowBox[{\\\"0.0006250000000000001`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"+\\\", \
RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\")\\\"}]}]}], \\\"\[Equal]\\\", \
RowBox[{RowBox[{\\\"0.24500000000000002`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \\\"+\\\", RowBox[{\\\"Cos\\\", \\\"[\
\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \
\\\"]\\\"}]}], \\\")\\\"}]}], \\\"+\\\", RowBox[{\\\"0.005`\\\", \\\" \\\", \
SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"2\\\"]}], \\\"+\\\", \
RowBox[{\\\"0.0006250000000000001`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"+\\\", \
RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\")\\\"}]}]}]}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"7\\\", \\\
\"\[RightSkeleton]\\\"}], \\\"\[Prime]\\\", Rule[MultilineFunction, None]], \
\\\"[\\\", \\\"0\\\", \\\"]\\\"}], \\\"\[Equal]\\\", \\\"0.1`\\\"}], \
\\\",\\\", RowBox[{RowBox[{SuperscriptBox[\\\"\[Beta]$10658\\\", \\\"\[Prime]\
\\\", Rule[MultilineFunction, None]], \\\"[\\\", \\\"0\\\", \\\"]\\\"}], \\\"\
\[Equal]\\\", \\\"0\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\) is neither \
a list of replacement rules nor a valid dispatch table, and so cannot be used \
for replacing.\"",2,14,312,24143912953325987473,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.7223152836354847`*^9, 3.7223153064471607`*^9}, 
   3.722315353424391*^9}],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"NDSolve\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"\[Alpha]$10658\\\", \\\"\[Prime]\
\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \
\\\"0.00040816326530612246`\\\", \\\"]\\\"}], \\\"\[Equal]\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"0.1`\\\"}], \\\" \\\", RowBox[{\\\"\
\[Alpha]$10658\\\", \\\"[\\\", \\\"0.00040816326530612246`\\\", \
\\\"]\\\"}]}], \\\"+\\\", RowBox[{\\\"2\\\", \\\" \\\", \
RowBox[{SuperscriptBox[\\\"\[Alpha]$10658\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", \\\"0.00040816326530612246`\\\", \
\\\"]\\\"}], \\\" \\\", RowBox[{SuperscriptBox[\\\"\[Beta]$10658\\\", \\\"\
\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \
\\\"0.00040816326530612246`\\\", \\\"]\\\"}]}]}]}], \\\",\\\", \
RowBox[{RowBox[{RowBox[{\\\"0.24500000000000002`\\\", \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \\\"+\\\", \
RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\")\\\"}]}], \\\"+\\\", RowBox[{\
\\\"0.005`\\\", \\\" \\\", SuperscriptBox[RowBox[{\\\"\[Alpha]$10658\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\"2\\\"]}], \\\"+\\\", \
RowBox[{\\\"0.0006250000000000001`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"+\\\", \
RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\")\\\"}]}]}], \\\"\[Equal]\\\", \
RowBox[{RowBox[{\\\"0.24500000000000002`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \\\"+\\\", RowBox[{\\\"Cos\\\", \\\"[\
\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \
\\\"]\\\"}]}], \\\")\\\"}]}], \\\"+\\\", RowBox[{\\\"0.005`\\\", \\\" \\\", \
SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"2\\\"]}], \\\"+\\\", \
RowBox[{\\\"0.0006250000000000001`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"+\\\", \
RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\")\\\"}]}]}]}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"7\\\", \\\
\"\[RightSkeleton]\\\"}], \\\"\[Prime]\\\", Rule[MultilineFunction, None]], \
\\\"[\\\", \\\"0\\\", \\\"]\\\"}], \\\"\[Equal]\\\", \\\"0.1`\\\"}], \
\\\",\\\", RowBox[{RowBox[{SuperscriptBox[\\\"\[Beta]$10658\\\", \\\"\[Prime]\
\\\", Rule[MultilineFunction, None]], \\\"[\\\", \\\"0\\\", \\\"]\\\"}], \\\"\
\[Equal]\\\", \\\"0\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\) is neither \
a list of replacement rules nor a valid dispatch table, and so cannot be used \
for replacing.\"",2,14,314,24143912953325987473,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.7223152836354847`*^9, 3.7223153064471607`*^9}, 
   3.722315353464094*^9}],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0.00040816326530612246`\\\"}]\\) cannot be used as \
a variable.\"",2,14,313,24143912953325987473,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.7223152836354847`*^9, 3.7223153064471607`*^9}, 
   3.722315353497212*^9}],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0.00040816326530612246`\\\"}]\\) cannot be used as \
a variable.\"",2,14,315,24143912953325987473,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.7223152836354847`*^9, 3.7223153064471607`*^9}, 
   3.722315353514969*^9}],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0.00040816326530612246`\\\"}]\\) cannot be used as \
a variable.\"",2,14,317,24143912953325987473,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.7223152836354847`*^9, 3.7223153064471607`*^9}, 
   3.722315353529756*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NDSolve\\\", \
\\\"::\\\", \\\"dsvar\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,14,318,24143912953325987473,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.7223152836354847`*^9, 3.7223153064471607`*^9}, 
   3.722315353545464*^9}],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"NDSolve\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"\[Alpha]$10658\\\", \\\"\[Prime]\
\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \
\\\"0.00040816326530612246`\\\", \\\"]\\\"}], \\\"\[Equal]\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"0.1`\\\"}], \\\" \\\", RowBox[{\\\"\
\[Alpha]$10658\\\", \\\"[\\\", \\\"0.00040816326530612246`\\\", \
\\\"]\\\"}]}], \\\"+\\\", RowBox[{\\\"2\\\", \\\" \\\", \
RowBox[{SuperscriptBox[\\\"\[Alpha]$10658\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", \\\"0.00040816326530612246`\\\", \
\\\"]\\\"}], \\\" \\\", RowBox[{SuperscriptBox[\\\"\[Beta]$10658\\\", \\\"\
\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \
\\\"0.00040816326530612246`\\\", \\\"]\\\"}]}]}]}], \\\",\\\", \
RowBox[{RowBox[{RowBox[{\\\"0.24500000000000002`\\\", \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \\\"+\\\", \
RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\")\\\"}]}], \\\"+\\\", RowBox[{\
\\\"0.005`\\\", \\\" \\\", SuperscriptBox[RowBox[{\\\"\[Alpha]$10658\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\"2\\\"]}], \\\"+\\\", \
RowBox[{\\\"0.0006250000000000001`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"+\\\", \
RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\")\\\"}]}]}], \\\"\[Equal]\\\", \
RowBox[{RowBox[{\\\"0.24500000000000002`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \\\"+\\\", RowBox[{\\\"Cos\\\", \\\"[\
\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \
\\\"]\\\"}]}], \\\")\\\"}]}], \\\"+\\\", RowBox[{\\\"0.005`\\\", \\\" \\\", \
SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"2\\\"]}], \\\"+\\\", \
RowBox[{\\\"0.0006250000000000001`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"+\\\", \
RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\")\\\"}]}]}]}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"7\\\", \\\
\"\[RightSkeleton]\\\"}], \\\"\[Prime]\\\", Rule[MultilineFunction, None]], \
\\\"[\\\", \\\"0\\\", \\\"]\\\"}], \\\"\[Equal]\\\", \\\"0.1`\\\"}], \
\\\",\\\", RowBox[{RowBox[{SuperscriptBox[\\\"\[Beta]$10658\\\", \\\"\[Prime]\
\\\", Rule[MultilineFunction, None]], \\\"[\\\", \\\"0\\\", \\\"]\\\"}], \\\"\
\[Equal]\\\", \\\"0\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\) is neither \
a list of replacement rules nor a valid dispatch table, and so cannot be used \
for replacing.\"",2,14,316,24143912953325987473,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.7223152836354847`*^9, 3.7223153064471607`*^9}, 
   3.7223153535617743`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,14,319,24143912953325987473,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.7223152836354847`*^9, 3.7223153064471607`*^9}, 
   3.722315353579763*^9}],

Cell[BoxData[
 GraphicsBox[{},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{0., 0.}, {0., 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.722315283899729*^9, 3.722315306708811*^9}, 
   3.722315353595277*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", 
  RowBox[{"{", 
   RowBox[{"1.27", ",", "1.31", ",", "1.29"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.722338107868822*^9, 3.722338122477206*^9}}],

Cell[BoxData["1.29`"], "Output",
 CellChangeTimes->{3.7223381230862207`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", 
  RowBox[{"{", 
   RowBox[{"2.39", ",", "2.62", ",", "2.09"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.722338125929015*^9, 3.722338131308353*^9}}],

Cell[BoxData["2.3666666666666667`"], "Output",
 CellChangeTimes->{3.722338131613769*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", "\"\</Users/Apple/Documents\>\"", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7223391360471077`*^9, 3.7223391571063833`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Model1", "[", 
    RowBox[{"0.2", ",", "0.1", ",", "0.5", ",", "0.2", ",", "0", ",", 
     RowBox[{
      RowBox[{"5", "/", "180"}], "*", "Pi"}], ",", "0.1", ",", "0", ",", 
     "20"}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.722339166499959*^9, 3.72233922464739*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
+vZyjMO3FgIPxsZ5jFN9aum9ZPzCFQKPBuwJrjMksXzBth7DSwTWdUolKoaQ
WDe3+1zxOQLV7ayvrjhCot56cs390wQu31pDy6gj8fBaVlNvKYGjitfs9lF+
Wvrn6byzx6h5tkp4E9FHYvfbfzQbiovYS2x0KP3BQtdf525zCPy5QSGw6h7l
3/tivohnE9j0aeIPXiVxv83vNlXKJ//YMk7qU3zGvLU+bEk8gfFyBTtlEkkk
mYs9b4ZTHBrY+S3JksQSrT0jJgcJ7Jrpn0lYRqKYX9TWAm8CFba5XdbuJfBM
XHb9pQMEbg+qiLqRQ6BvgBz7qC2BYroLCl02Uvfu+/2buTmBMR6GFSa1fLwY
vVfllhGBif+q9pS+4WHdAwOeFOUXKZHP0/wo3x2Xylz6dh21zm153anMwdOj
oz/oqwm8F7cz+9lqNm7eaxK4YBGByiWdZ/yGGSjquvSC/zU+WjW2rz19PQO/
nQ1dt7OKjz6/T+iJeNBx4nqPdjHJx/HzkbZRn9LReX+lxk0fPpZW1sf1Tifh
7N1dxq3/eCh3dOkulfFQrF7se9NjlIcuNdnyfVFBuERNnhHVzUOZiVGb9V+9
cVJ0vuwUycNnw/wKNa/d2CT3Mn7Zah4uCPFPLfL2h+NJqYkaM1z8Lfjl6Ltn
h+FUpZPPpWEu1nbtKuQpRYCQnfLBfyVc7GkWOS4XEQc1ofZXOpO4mP4paW91
ViIkhhla/DnAxUqbo2r32SmwsUG4/JwkF8tnOm6sr6OB1qKzEmqfqbxyJTan
a1UGHC1ZLL+8h8pTKnF1cxMzYeX5NaXGGRyk5b+o8JPMgZhnEy5Mdw6q77G7
pLCPAaMfJcyNDaj3apYfdS6ZCb2PzIrXvWXjlP2nbSfOs0F2sbf57A02Etd3
84VLOfDOwzf84Ak2zp0ju3+KzoVby+bGB8Sz8WLK1MwLZx7ULpX4+NOWjXH2
qXmJ8nxYXdSRqbSejUcCM0fdn/JBPKRY4u08Nu5SWfPy2E4C/ElpwmqIhaBr
KfyER0COhsFy23oWupjbzoFHBAT5vhn6xWZh1IKfwvVLSegRW7rVwpfKzVGL
dGVMSXiRlH1iz1YWLhFeYW0XTfFUHZE/Jc5Cvvc3UetjFG+FVbdZjjPxdMhG
kR8Ub/FFph+4tzExzl+iaxfFY+1r1uWr5TGx76TVFeUnJEyfbH51OYiJ71tb
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
4cvVlZB+EB6Fmi9LSWDCNHm87E76IdiZ+NAs05oBKdkHmzhph8E5cFs2n8ov
4w/9vOPjQqCTP6mzPzUT4l3z32eFh8LcLRnvohQzINi3nJcbGAa1QzUxB1pp
AEzmMqwMh09twhGzVSkAsny9QXok/Fe4QK/OOQJuGhkpLBSMheXhgaMXVLxx
QnZ447ygWNhXKFsSuyEQSxbNHRO9GwvbMweS9quHYPTHU4XOvDiY2q52ZU1S
NIqce35ASjgB3O8rHjXoTsP03wWKTwISQDp69Y+g7TTcp73sAHYkwA+Z+woq
PDp+WX1h2+r4RMg8u37XQqksbPT+k0F7mgRLCkef7Khi4sXU0vfztZOhYldy
oG8tC4WrwqWeZiWDw7OHC5fVsPHvkRwngWfJQNRnnB0o4qDsPJosTSsFvIKX
796TzMWxFRfGvDKoOd1bMffTPh7qW3/cfvpJCnR9fJgeK8XHB11/JSOTUqFr
YEzOaSuBW6fDJub3pMKz6a9KzykuUOGLf5JckwZ3U6q+XbxLYMl369GK0DS4
sVHqRA3FmY8nH6W1XEuDHOad7sbtJB7Pq9+htTAdkP7gcdMhEtWi7t7p3pAO
UZGlQ0V8EhMEAndo708HdtvudqsaEp3e/g33T0mH+GsVWtfbSTSX2rcpuCId
Kn3raj5SfPLVM9Td9G462C4oz31A+YfK6JuLvz6nw64XwzI+1PrqQPHPWTI0
8D8Ya1uFJEYkbxz+uIMGJf6HVKuqSZz7qk7VwJ8GLyKYPoe5VG28Lc2bTYPd
g67HZgNJNL28PCP8Eg1MP3jqxW4l8Ya6/72AfhosGVrvNkpxsN5OkwmTGRqM
3Jr/16eLwI6Z9c7LlOjg48w8J0YncNFmYfK+GR2OFopXLtQnUEPz6O/EUDqs
nu5Ne93Ox0JkfVyZTwchiZnCCSE+zlq3kjtG6LB5JDDlVQiXyifOlZ2CGbBw
aUdyAZuDs2lxEpbqGXDqVPqhX8VsrPKU+W4TkwHdbxNViAIm5pCb9jwpygCd
1Gcd9TQGas7EHfFszwALj+fsg945aBTrOzdLJBMGGfSCkwJZ6H7gsOVanUzQ
aFjsbUTxzzYTYrJnfyaId+QNnI6no1uyQfaeU5mg4k1PcilJQ6EnX+LHtmTB
Lq2HCQ2W0RgdEvJJ2zcL2pWUDmWsjsDZqqf9JCcLPPse8O52HUZ5/fNLC0ay
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
aiAxsarrZsOgFfoezlMuaCGx6/flia+HbPDB1N9O7nMShRIKu75WHkejN2NC
/RR/fvHdEByQOonhzjF2l26QmMsXxd+TakvlIb7w9WkSl66N0vw7bofGti8e
ZIZQ890e887W0gEX2DBPfdhP4o3ZHQsWOzii9rcujZ7lJIoJOpheWu6E3RvY
vLOU/9IctlsV3+iEkxOq17ZnEphyJEOoNM4Zm8ItHNsp/7XQteqinoYL6hQd
aVMc4mGKtaz2jo8u6Ezfe85YhYc8NY3PxbmuOOfgz7B15+L01qbSPCs33HWg
Qaue4GAAJ6f7yBN3lIqaeKZ6j0XNc03fqgQPvCD3+dyq+0xMDcuQzdDxxOcr
7fNWlKfjUfl+0/oSLww3SLB0CqHj7LLmE4SXN35Pdqqs3UvD+yltXds3+WDu
9TAd50VpeHtllYLaZV9sMjLXeRCejDXKlm7N+QHYVrf/ht6rKPQ1sBrJ0wxE
ox0BtH9fwnFFRbjml9OBuNZXJPfK7xBM/tPtq2wXhFlHTj3NnfJBvz+5FrGT
wbjmnGqA06QuBpXEN9ZbheD5LAni2WktGJuM7b9cE4JypxZXzgochaHZPzfX
cUKx8UTdX+GjbtAk6uj5XT0c4zaZX28pCwe1NyzdlgvhaCjPvNVzNgpKnn9h
b1sUgbJW2WmXImJBU8tDPa4/Ap/dUa9wEUiC5d2Tmk5HIlHVrNa2xjYZXjZs
lay5F4mt614e3FucAgKy9N0NWVH40Hix6NGtNHCW4u/1WhCN7K+dhfkOdBjZ
MCHhFxaNfuLj1++lMWCoLzg/yiIGVVJCj/wrYYK1qP2e0PoYfPatU1qmjAXT
Lfv/3dCMxTSWvc43qq/M87p3tnNFHDawh0q6HLmgHnEuOTg1Dh2Vr3IMNvHA
4uvHyq3f4tBTU2mtcQ8PJpr/s53nHI/KLpvsnhoQYNDU4NffFo83D1Uc8+YR
oPt4efFjSMDRdUKpLi8p3+dEluaVJqCM5t2lp8RI2PFnUcjdJYm49YFq5cA+
EhqYSkdX7kvEIK5di0YoCRfrTok5xSWii+pir5CzJNweDa8/VZmIZT/RhLhF
wq00/oiyT4m4unUVX1wTCa9V4zWuySZhvV/W622vSVjVsEkg/ngSTi2o+XqZ
4o1wZc+MIpGEZZ3+Oi+p6y6OwjL5T5JwtlnU83EzCcDrv/T5TxJu0bNaHHub
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
wM7WHn6nMQtjXMf6hmoIMLgZ1blSloUzVdK9ItcJEDGsjNjxnonm7UVrChIJ
APdjC9aXMlFJ/6+CAWcClnbsWjBLZSLXmEGv30zASKHhzxJrJhbHX2z0mRCC
4tpDQVZrmFjPOOP3uYTsx8EPT7u/MnC5/iUXXw8hSO1h+jncZ6CD8j7P5dJC
cB5JzWxOZuDXQ89FhigCeHRbX7jLgYEjndJTF4r4IBdT5JP7DwPNv7ZZZHXz
AO1krifU0VGg4h++SIILUpZDFfMEHW1mg90spDiw8v3i6URXOs5UD3AIUTZ4
u+g2tf0ic5w2H9ReJMIulyfV3N0kb3LuxtT3JcD92KkNzcsSMGBn9St9Dg0g
J2CT+msafsl4fslCnQp37WPd/CJpiGILx1j3Y0DQV7Di6z0qOjWkypd1nILg
OV8JWhIVBaubLsXUeoNlmuN5U0cqJpWOKf+b6wa/nKvHmqfjUf5opNe0oQnI
PXifOUc/gy0qP1R0j5/E2ai8fFA7g2bZ51ytI30xu6vz1YeWOITmM1/+YFFw
S7xau518HK5UfVsSUhmOZrO2g3G3TuPJrh1PsvlUlA/ULLxofxo1G1bWtH2k
obS81BOJ3zG413kw8bguHbdeMX7+1CoGt4bKNIvWMPFwaYSk9Ew0KowU+Y1N
snADp/jI+exojKmSqGhUSsK5KqfgoxNR6FBl5PrnATZe8O+UomdGoc78R06Y
DQeNxGhWvfui0MldL/q2GReXPxpe7zoSiYfNflCsd/DQSPJmwNKMSHSyLDd5
J8HH41O17U/3RmLL/Bf+5Bs+ftt2f/Ta5wh8bJvVs+2cAM1PD24+lxaBor7j
lExVIX7av7c/3SACE946PbMPJXnKDsYtP4ejLM1Ipr2SzNW3WrtFzobjRPe9
46mzQixxZy+sMAzHksxXlVHbCEw28ih1HwnDjJ+mPX4nCPz0y2vj/LkwNK4p
VjxC8tR4440UhnEYblMp56iQep8V9UZ8fCwUfZZwvjVVEdgmnZ2nmxWKCxyT
hnY/IbBo4JHnCdNQ3M7llAeTfEXvWGVhNxGCs6m7WAHPCJz8sNBk1YUQ1LSJ
2Le5jsAlHkPmV01DsEzaK7f0FoFvKHp7x8eDMf1fv3XiZwnUnWPIzmQGowHH
6g/DUAL7tnwqKTUOxgCxPC8PcwIfnl0/pzgahCscTo8myREoXyIc2pYRhKsX
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
H9Fe8wg=
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-0.016641994637314233`, 
   0.016773981486737567`}, {-0.01741734483018165, 0.017453292519943295`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7223391672650948`*^9, 3.722339225137966*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<fig1.eps\>\"", ",", "%24"}], "]"}]], "Input",
 CellChangeTimes->{{3.722339232037837*^9, 3.72233925673387*^9}}],

Cell[BoxData["\<\"fig1.eps\"\>"], "Output",
 CellChangeTimes->{{3.722339251346805*^9, 3.7223392589092484`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TeXForm", "[", 
  "\"\<Show[Model1[0.2,0.1,0.5,0.2,0,5/180*Pi,0.1,0,20],ImageSize\[Rule]Large]\
\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.72233962218293*^9, 3.722339635911022*^9}}],

Cell["\<\
\\text{Show[Model1[0.2,0.1,0.5,0.2,0,5/180*Pi,0.1,0,20],ImageSize$\\to \
$Large]}\
\>", "Output",
 CellChangeTimes->{3.722339636927167*^9}]
}, Open  ]]
},
WindowSize->{922, 687},
WindowMargins->{{Automatic, 155}, {-119, Automatic}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 180, 4, 32, "Input"],
Cell[CellGroupData[{
Cell[763, 28, 2083, 54, 54, "Input"],
Cell[2849, 84, 1097, 18, 30, "Message"],
Cell[3949, 104, 2691, 80, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6677, 189, 1116, 34, 54, "Input"],
Cell[7796, 225, 991, 34, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8824, 264, 382, 11, 32, "Input"],
Cell[9209, 277, 98, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9344, 283, 378, 12, 32, "Input"],
Cell[9725, 297, 76, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9838, 303, 284, 8, 32, "Input"],
Cell[10125, 313, 275, 9, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10437, 327, 871, 25, 75, "Input"],
Cell[11311, 354, 86515, 1430, 437, 65952, 1091, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[97841, 1787, 90, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[97956, 1792, 696, 20, 32, "Input"],
Cell[98655, 1814, 394, 12, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99086, 1831, 2237, 64, 136, "Input"],
Cell[101326, 1897, 28417, 558, 116, "Output"]
}, Open  ]],
Cell[129758, 2458, 512, 14, 32, "Input"],
Cell[130273, 2474, 14262, 345, 837, "Input"],
Cell[CellGroupData[{
Cell[144560, 2823, 596, 11, 32, "Input"],
Cell[145159, 2836, 107, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145303, 2842, 333, 7, 32, "Input"],
Cell[145639, 2851, 38217, 637, 447, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183893, 3493, 838, 15, 32, "Input"],
Cell[184734, 3510, 57070, 945, 68, "Output"]
}, Open  ]],
Cell[241819, 4458, 132, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[241976, 4464, 1842, 48, 96, "Input"],
Cell[243821, 4514, 2519, 51, 451, "Output"]
}, Open  ]],
Cell[246355, 4568, 3790, 97, 250, "Input"],
Cell[CellGroupData[{
Cell[250170, 4669, 285, 6, 32, "Input"],
Cell[250458, 4677, 2858, 44, 98, "Message"],
Cell[253319, 4723, 3520, 52, 110, "Message"],
Cell[256842, 4777, 3520, 52, 110, "Message"],
Cell[260365, 4831, 321, 7, 24, "Message"],
Cell[260689, 4840, 321, 7, 24, "Message"],
Cell[261013, 4849, 321, 7, 24, "Message"],
Cell[261337, 4858, 396, 8, 24, "Message"],
Cell[261736, 4868, 3522, 52, 110, "Message"],
Cell[265261, 4922, 398, 8, 24, "Message"],
Cell[265662, 4932, 638, 20, 371, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[266337, 4957, 189, 4, 32, "Input"],
Cell[266529, 4963, 76, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[266642, 4969, 189, 4, 32, "Input"],
Cell[266834, 4975, 88, 1, 32, "Output"]
}, Open  ]],
Cell[266937, 4979, 185, 4, 32, "Input"],
Cell[CellGroupData[{
Cell[267147, 4987, 389, 9, 32, "Input"],
Cell[267539, 4998, 49617, 824, 616, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317193, 5827, 164, 3, 32, "Input"],
Cell[317360, 5832, 111, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317508, 5838, 208, 4, 32, "Input"],
Cell[317719, 5844, 149, 4, 43, "Output"]
}, Open  ]]
}
]
*)

